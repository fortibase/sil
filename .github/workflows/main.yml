name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: echo ${{github.ref}} # if: github.event_name == 'push'  && github.ref == 'refs/heads/master' ---> Push && Master

      - run: echo Condition met
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'

      - name: Begin CI...
        uses: actions/checkout@v2

      - name: Use Node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install # `npm ci` is not used, because `node_modules` are cached, and `npm ci` deletes `node_modules`. Use it if no cache is used.

      # - name: eslint on PR
      #   if: github.event_name == 'pull_request'
      #   uses: reviewdog/action-eslint@v1
      #   with:
      #     reporter: github-pr-review
          # eslint_flags: 'src/'

      - name: eslint on Commit
        # if: github.event_name == 'push'
        uses: stefanoeb/eslint-action@1.0.2
        # with:
        #   reporter: github-check
          # eslint_flags: 'src/'

      - name: Create README.md
        run: npx devkeeper-docs readme
        env:
          CI: true

      - name: Commit changes
        uses: EndBug/add-and-commit@v4
        with:
          message: "docs: auto generate README from template"
          add: "README.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Lint
      #   run: yarn lint
      #   env:
      #     CI: true

      # - name: Test
      #   run: yarn test --ci --coverage --maxWorkers=2
      #   env:
      #     CI: true

      # - name: Build
      #   run: yarn build
      #   env:
      #     CI: true



      # - run: npm install
      # - run: npm run build --if-present
      # - run: npm test
